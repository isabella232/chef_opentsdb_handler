require "chef"
require "chef/handler"
require 'net/http'
require "timeout"

class Chef::Handler::OpenTSDB < Chef::Handler
  def initialize(config = {})
    @config = config

    @handlers= config['handlers']
    @hostname = config['hostname'] || <%= node['opentsdb_handler']['default_hostname'] %>
    @path = "/api/put"
    @port = config['port'] || <%= node['opentsdb_handler']['default_port'] %>
    @time = Time.now.to_i # Make time the same for all metrics
    @timeout = @config['timeout'] || <%= node['opentsdb_handler']['default_timeout'] %>
  end

  def report
    @handlers.each do |handler|
      begin
        Timeout::timeout(@timeout) do
          send_metric(handler)
        end
      rescue Exception => e
        Chef::Log.warn("OpenTSDB handler failed to send metric #{config['metric']}: #{e.message}")
      end
    end
  end

  private

  def send_metric(handler)
    handler['tags'] ||= <%= node['opentsdb_handler']['default_tags'] %>
    req = Net::HTTP::Put.new(path, initheader = { 'Content-Type' => 'application/json'})
    req.body = format_body(handler)
    response = Net::HTTP.new(hostname, port).start {|http| http.request(req) }
  end

  def format_body(handler)
    body = {
      "metric" => handler['metric'],
      "timestamp" => @time,
      "value" => config['value'],
      "tags" => get_tags(handler['tags'])
    }
    body.to_json
  end

  def get_tags(tags)
    if <%= node['opentsdb_handler']['add_run_status_tag'] %>
      tags.merge('run_status' => run_status.success? ? 0 : 1)
    else
      tags
    end
  end
end
